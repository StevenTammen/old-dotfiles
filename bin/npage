#!/bin/bash

# generate Org file from Hugo archetype
hugo.exe new pages/$1.org


# handle nested sections
path="$(dirname "$1")"
if [ "$path" != "." ]; then # if nested
  # redefine HUGO_SECTION
  sed -i "s|pages|pages/$path|g" content/pages/$1.org
  # create nested section dir(s) in org/, if they don't exist
  path="org/pages/$path/"
  mkdir -p "$path"
  # redefine HUGO_BASE_DIR
  path=$(echo "$path" | sed -r "s/[-a-zA-Z0-9_]+/../g")
  sed -i "s|../../|$path|g" content/pages/$1.org
fi


# optionally specify categories and tags to populate at file creation.
# assume that if categories are specified, tags will be as well
if [ -n "$3" ]; then

  argtype="none"
  categories=""
  tags=""

  for var in "$@"
  do

    # skip irrelevant first argument
    [ "$var" = "$1" ] && continue

    # otherwise, deal with categories and tags
    if [ "$var" = "-c" ]; then
      argtype="categories"
    elif [ "$var" = "-t" ]; then
      argtype="tags"
    else
      if [ "$argtype" = "categories" ]; then
        categories="$categories \"${var}\""
      elif [ "$argtype" = "tags" ]; then
        tags="$tags \"${var}\""
      fi
    fi

  done

  sed -i "s|HUGO_CATEGORIES: |HUGO_CATEGORIES:$categories|g" content/pages/$1.org
  sed -i "s|HUGO_TAGS: |HUGO_TAGS:$tags|g" content/pages/$1.org

fi


# Identify the draft, and prep it for concatenation by removing placeholder metadata
# (i.e., the draft's #+TITLE, #+HUGO_BASE_DIR, etc.)
fname="$(basename "$1")"
sed -i '1,5d' org/drafts/$fname.org


# copy contents from draft and save to new file. Remove extra files.
cat content/pages/$1.org org/drafts/$fname.org > org/pages/$1.org
rm content/pages/$1.org org/drafts/$fname.org content/drafts/$fname.md


# export to markdown after creation to allow for immediate previewing on http://localhost:1313/
emacsclientw.exe -e "(progn (find-file \"org/pages/$1.org\") (org-hugo-export-to-md) (kill-buffer))"


# automatically open in Emacs to start proofreading before publication
emacsclientw.exe org/pages/$1.org &
